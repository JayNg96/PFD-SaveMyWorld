var items = new Object; items.init = function () { items.recycle_types = { PLASTIC: 0, PAPER: 1, GLASS: 2, METAL: 3, LANDFILL: 4 }, items.atlas = imageset.load("images/items.png"), items.defs = new Array, items.defs[0] = { name: "Water Bottle", x: 2, y: 17, w: 15, h: 45, rtype: items.recycle_types.PLASTIC }, items.defs[1] = { name: "Milk Jug", x: 19, y: 7, w: 39, h: 55, rtype: items.recycle_types.PLASTIC }, items.defs[2] = { name: "Laundry Soap", x: 60, y: 18, w: 36, h: 44, rtype: items.recycle_types.PLASTIC }, items.defs[3] = { name: "Cardboard Box", x: 98, y: 14, w: 51, h: 48, rtype: items.recycle_types.PAPER }, items.defs[4] = { name: "News Print", x: 151, y: 34, w: 53, h: 28, rtype: items.recycle_types.PAPER }, items.defs[5] = { name: "Brown Bag", x: 206, y: 16, w: 35, h: 46, rtype: items.recycle_types.PAPER }, items.defs[6] = { name: "Green Bottle", x: 243, y: 12, w: 17, h: 50, rtype: items.recycle_types.GLASS }, items.defs[7] = { name: "Mason Jar", x: 262, y: 27, w: 23, h: 35, rtype: items.recycle_types.GLASS }, items.defs[8] = { name: "Root Beer", x: 287, y: 13, w: 16, h: 49, rtype: items.recycle_types.GLASS }, items.defs[9] = { name: "Small Can", x: 305, y: 32, w: 23, h: 30, rtype: items.recycle_types.METAL }, items.defs[10] = { name: "Large Can", x: 329, y: 22, w: 22, h: 40, rtype: items.recycle_types.METAL }, items.defs[11] = { name: "Soda Can", x: 353, y: 28, w: 18, h: 34, rtype: items.recycle_types.METAL }, items.defs[12] = { name: "Foam Cup", x: 373, y: 17, w: 28, h: 45, rtype: items.recycle_types.LANDFILL }, items.defs[13] = { name: "Greasy Box", x: 403, y: 32, w: 60, h: 30, rtype: items.recycle_types.LANDFILL }, items.defs[14] = { name: "Coffee Mug", x: 465, y: 36, w: 29, h: 26, rtype: items.recycle_types.LANDFILL }, items.defs[15] = { name: "Spray Can", x: 496, y: 22, w: 17, h: 40, rtype: items.recycle_types.LANDFILL }, items.bins = new Array, items.bins[items.recycle_types.PLASTIC] = { name: "Plastic", hotspot: { x: -32, y: -32, w: 136, h: 112 }, center_x: 56, left_x: 16 }, items.bins[items.recycle_types.PAPER] = { name: "Paper", hotspot: { x: 104, y: -32, w: 96, h: 112 }, center_x: 152, left_x: 112 }, items.bins[items.recycle_types.GLASS] = { name: "Glass", hotspot: { x: 200, y: -32, w: 96, h: 112 }, center_x: 248, left_x: 208 }, items.bins[items.recycle_types.METAL] = { name: "Metal", hotspot: { x: 296, y: -32, w: 136, h: 112 }, center_x: 344, left_x: 304 }, items.bins[items.recycle_types.LANDFILL] = { name: "Landfill", hotspot: { x: -32, y: 0, w: 136, h: 112 }, center_x: 40, left_x: 0 }, items.bin_width = 80, items.bins_top = 16, items.reset() }, items.reset = function () { items.ilist = [], items.grabbing = !1, items.grabbed_item = 0, items.new_countdown = 0, items.delay_between_items = 96 }, items.add_random = function () { var e = Math.floor(Math.random() * items.defs.length); items.add_item(e) }, items.add_item = function (e) { new_item = new Object, new_item.itype = e, new_item.x = game_main.VIEW_WIDTH - 1, new_item.y = conveyor.top - items.defs[new_item.itype].h, new_item.dx = conveyor.get_speed(), new_item.dy = 0, items.ilist.push(new_item) }, items.remove = function (e) { items.ilist.splice(e, 1), items.grabbing && items.grabbed_item > e && items.grabbed_item-- }, items.logic = function () { items.grab_check(), items.release_check(), items.move(), items.bounds_check(), items.collect() }, items.item_flow = function () { conveyor.active && (items.new_countdown--, items.new_countdown <= 0 && (items.add_random(), items.new_countdown = items.delay_between_items)) }, items.halt_conveyor = function () { for (var e, i, t = 0; t < items.ilist.length; t++)e = !1, items.ilist[t].x + items.defs[items.ilist[t].itype].w < conveyor.left && (e = !0), i = !1, items.ilist[t].y + items.defs[items.ilist[t].itype].h == conveyor.top && (e || (i = !0)), i && (items.ilist[t].dx = 0) }, items.logic_game_over = function () { items.grabbing = !1; for (var e = 0; e < items.ilist.length; e++)items.ilist[e].dy++, items.ilist[e].x += items.ilist[e].dx, items.ilist[e].y += items.ilist[e].dy; items.bounds_check() }, items.move = function () { for (var e, i, t, s, m, n = 0; n < items.ilist.length; n++)items.grabbing && n == items.grabbed_item ? (items.ilist[n].x = inputs.mouse_pos.x - items.defs[items.ilist[n].itype].w / 2, items.ilist[n].y = inputs.mouse_pos.y - items.defs[items.ilist[n].itype].h / 2) : (t = !1, items.ilist[n].x + items.defs[items.ilist[n].itype].w < conveyor.left && (t = !0), i = !1, items.ilist[n].y + items.defs[items.ilist[n].itype].h == conveyor.top && (t || (i = !0)), s = !1, items.ilist[n].y + items.defs[items.ilist[n].itype].h < conveyor.top && (t || (s = !0)), (e = !i) && items.ilist[n].dy++, m = !1, e && s && items.ilist[n].y + items.defs[items.ilist[n].itype].h + items.ilist[n].dy >= conveyor.top && (m = !0, items.ilist[n].dy = conveyor.top - items.ilist[n].y - items.defs[items.ilist[n].itype].h), i && Math.random() < .01 && (items.ilist[n].dy = -1 * Math.floor(3 * Math.random())), items.ilist[n].x += items.ilist[n].dx, items.ilist[n].y += items.ilist[n].dy, m && (items.ilist[n].dx = conveyor.get_speed(), items.ilist[n].dy = 0)) }, items.bounds_check = function () { for (var e, i = items.ilist.length - 1; i >= 0; i--)e = !1, items.ilist[i].y >= game_main.VIEW_HEIGHT && (e = !0), e && (gamestate.current_state == gamestate.state_types.PLAY && scorekeeper.verify(items.ilist[i].itype, items.recycle_types.LANDFILL), items.remove(i)) }, items.grab_check = function () { if (!items.grabbing && inputs.pressing.mouse) for (var e = new Object, i = 0; i < items.ilist.length; i++)if (e.x = items.ilist[i].x - 8, e.y = items.ilist[i].y - 8, e.w = items.defs[items.ilist[i].itype].w + 8 + 8, e.h = items.defs[items.ilist[i].itype].h + 8 + 8, utils.is_within(inputs.mouse_pos, e)) return items.grabbing = !0, items.grabbed_item = i, items.ilist[i].dx = 0, void (items.ilist[i].dy = 0) }, items.release_check = function () { items.grabbing && (inputs.pressing.mouse || (items.grabbing = !1, items.toss())) }, items.toss = function () { var e = items.grabbed_item; if (!(items.ilist[e].y > 80)) { for (var i, t = -1, s = -1, m = 0; m < 4; m++)i = items.ilist[e].x + items.defs[items.ilist[e].itype].w / 2, utils.is_within({ x: i, y: items.ilist[e].y }, items.bins[m].hotspot) && (s = m, t = items.bins[m].center_x); if (-1 != s) { for (var n = 8 - items.defs[items.ilist[e].itype].h, y = items.ilist[e].y - n, r = 0, l = 0; l < y;)l += ++r; items.ilist[e].dy = -1 * r; var o = r; l = 0; for (var a = 0; l < items.defs[items.ilist[e].itype].h + 8;)l += ++a; items.ilist[e].dx = (t - i) / (o + a) } } }, items.collect = function () { for (var e, i = -1, t = items.ilist.length - 1; t >= 0; t--)if (!(items.ilist[t].y > 80 || items.ilist[t].y < 16 || items.ilist[t].dy <= 0)) { e = items.ilist[t].x + items.defs[items.ilist[t].itype].w / 2; for (var s = 0; s < 4; s++)utils.is_within({ x: e, y: items.ilist[t].y }, items.bins[s].hotspot) && (i = s); -1 != i && (scorekeeper.verify(items.ilist[t].itype, i), items.remove(t)) } }, items.render = function () { items.render_caption(); for (var e = items.ilist.length - 1; e >= 0; e--)items.grabbing && items.grabbed_item === e || items.render_single(e); items.grabbing && items.render_single(items.grabbed_item) }, items.render_caption = function () { items.grabbing && bitfont.render(items.defs[items.ilist[items.grabbed_item].itype].name, 200, 88, bitfont.JUSTIFY_CENTER) }, items.render_single = function (e) { var i = items.ilist[e].itype; if (visible_height = items.defs[i].h, items.ilist[e].x + items.defs[items.ilist[e].itype].w < conveyor.left) { if (items.ilist[e].y + items.defs[items.ilist[e].itype].h > 200 && (visible_height = 200 - items.ilist[e].y, visible_height < 0)) return } items.ilist[e].y < 80 && items.ilist[e].dy > 0 && items.ilist[e].y + items.defs[items.ilist[e].itype].h > 16 && (visible_height = 16 - items.ilist[e].y, visible_height < 0) || imageset.render(items.atlas, items.defs[i].x, items.defs[i].y, items.defs[i].w, visible_height, items.ilist[e].x, items.ilist[e].y) };